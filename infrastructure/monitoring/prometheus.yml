# ArbitrageX Supreme V3.0 - Prometheus Configuration
# Monitoreo completo de MEV Engine, API Backend y infraestructura

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'arbitragex-production'
    env: 'production'

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load and evaluate rules
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # ArbitrageX MEV Engine
  - job_name: 'mev-engine'
    static_configs:
      - targets: ['mev-engine:9090']
    scrape_interval: 5s
    scrape_timeout: 4s
    metrics_path: /metrics
    honor_labels: true

  # ArbitrageX API Backend
  - job_name: 'api-backend'
    static_configs:
      - targets: ['api-backend:3000']
    scrape_interval: 10s
    scrape_timeout: 5s
    metrics_path: /metrics
    honor_labels: true

  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Redis Exporter  
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Node Exporter (System metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Alertmanager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 60s
    metrics_path: /metrics

# Recording rules for performance optimization
recording_rules:
  # MEV Engine Performance Rules
  - name: mev_engine_performance
    rules:
      - record: arbitragex:mev_engine:success_rate_5m
        expr: |
          rate(arbitragex_successful_executions_total[5m]) / 
          rate(arbitragex_total_executions_total[5m])
      
      - record: arbitragex:mev_engine:profit_per_minute
        expr: rate(arbitragex_total_profit[5m]) * 60
      
      - record: arbitragex:mev_engine:avg_execution_time_5m
        expr: |
          rate(arbitragex_execution_time_seconds_sum[5m]) /
          rate(arbitragex_execution_time_seconds_count[5m])

  # Blockchain Health Rules
  - name: blockchain_health
    rules:
      - record: arbitragex:blockchain:health_score_avg
        expr: avg by (chain) (arbitragex_blockchain_health_score)
      
      - record: arbitragex:blockchain:latency_p95
        expr: histogram_quantile(0.95, rate(arbitragex_blockchain_latency_seconds_bucket[5m]))

  # Strategy Performance Rules  
  - name: strategy_performance
    rules:
      - record: arbitragex:strategy:profit_per_execution
        expr: |
          increase(arbitragex_strategy_profit_total[1h]) /
          increase(arbitragex_strategy_executions_total[1h])
      
      - record: arbitragex:strategy:success_rate_1h
        expr: |
          increase(arbitragex_strategy_successful_executions_total[1h]) /
          increase(arbitragex_strategy_executions_total[1h])

  # System Resources Rules
  - name: system_resources
    rules:
      - record: arbitragex:system:cpu_usage_avg
        expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)
      
      - record: arbitragex:system:memory_usage_percent
        expr: |
          (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100
      
      - record: arbitragex:system:disk_usage_percent
        expr: |
          100 - ((node_filesystem_avail_bytes{fstype!="tmpfs"} / 
          node_filesystem_size_bytes{fstype!="tmpfs"}) * 100)

# Alerting Rules
alerting_rules:
  # MEV Engine Critical Alerts
  - name: mev_engine_critical
    rules:
      - alert: MEVEngineDown
        expr: up{job="mev-engine"} == 0
        for: 1m
        labels:
          severity: critical
          component: mev-engine
        annotations:
          summary: "MEV Engine is down"
          description: "ArbitrageX MEV Engine has been down for more than 1 minute"

      - alert: MEVEngineHighErrorRate
        expr: arbitragex:mev_engine:success_rate_5m < 0.8
        for: 5m
        labels:
          severity: critical
          component: mev-engine
        annotations:
          summary: "MEV Engine high error rate"
          description: "MEV Engine success rate is {{ $value | humanizePercentage }} (below 80%)"

      - alert: MEVEngineLowProfitability
        expr: arbitragex:mev_engine:profit_per_minute < 0.01
        for: 15m
        labels:
          severity: warning
          component: mev-engine
        annotations:
          summary: "MEV Engine low profitability"
          description: "MEV Engine profit per minute is {{ $value }} (below $0.01)"

  # Blockchain Health Alerts
  - name: blockchain_health
    rules:
      - alert: BlockchainUnhealthy
        expr: arbitragex_blockchain_health_score < 0.7
        for: 2m
        labels:
          severity: warning
          component: blockchain
        annotations:
          summary: "Blockchain {{ $labels.chain }} unhealthy"
          description: "Blockchain {{ $labels.chain }} health score is {{ $value | humanizePercentage }}"

      - alert: BlockchainHighLatency
        expr: arbitragex:blockchain:latency_p95 > 5
        for: 5m
        labels:
          severity: warning
          component: blockchain
        annotations:
          summary: "High blockchain latency"
          description: "95th percentile blockchain latency is {{ $value }}s"

  # Database Alerts
  - name: database_alerts
    rules:
      - alert: PostgreSQLDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          component: database
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database has been down for more than 1 minute"

      - alert: PostgreSQLHighConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "PostgreSQL high connection usage"
          description: "PostgreSQL is using {{ $value | humanizePercentage }} of max connections"

      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          component: cache
        annotations:
          summary: "Redis is down"
          description: "Redis cache has been down for more than 1 minute"

  # System Resource Alerts
  - name: system_resources
    rules:
      - alert: HighCPUUsage
        expr: arbitragex:system:cpu_usage_avg > 85
        for: 10m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}% on {{ $labels.instance }}"

      - alert: HighMemoryUsage
        expr: arbitragex:system:memory_usage_percent > 90
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}% on {{ $labels.instance }}"

      - alert: HighDiskUsage
        expr: arbitragex:system:disk_usage_percent > 85
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High disk usage"
          description: "Disk usage is {{ $value }}% on {{ $labels.instance }}"

  # API Backend Alerts
  - name: api_backend
    rules:
      - alert: APIBackendDown
        expr: up{job="api-backend"} == 0
        for: 1m
        labels:
          severity: critical
          component: api-backend
        annotations:
          summary: "API Backend is down"
          description: "ArbitrageX API Backend has been down for more than 1 minute"

      - alert: APIHighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 10m
        labels:
          severity: warning
          component: api-backend
        annotations:
          summary: "API high response time"
          description: "95th percentile response time is {{ $value }}s"

      - alert: APIHighErrorRate
        expr: |
          (rate(http_requests_total{code=~"5.."}[5m]) / 
           rate(http_requests_total[5m])) > 0.05
        for: 5m
        labels:
          severity: warning
          component: api-backend
        annotations:
          summary: "API high error rate"
          description: "API error rate is {{ $value | humanizePercentage }}"