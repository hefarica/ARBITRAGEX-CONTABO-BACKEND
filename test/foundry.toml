[profile.default]
src = "contracts"
out = "out"
libs = ["lib"]
test = "test"
cache_path = "cache"

# Solc configuration
solc_version = "0.8.20"
optimizer = true
optimizer_runs = 200
via_ir = true

# Test configuration
verbosity = 3
gas_reports = ["*"]
gas_reports_ignore = ["test/**/*"]

# Fork configuration for mainnet tests
eth_rpc_url = "https://eth-mainnet.g.alchemy.com/v2/demo"
fork_block_number = 18_500_000

# Coverage configuration
coverage = true
coverage_exclude = ["test/**/*", "scripts/**/*"]

# Fuzzing configuration
fuzz_runs = 10000
fuzz_max_test_rejects = 65536
fuzz_seed = "0x1"

# Invariant testing
invariant_runs = 256
invariant_depth = 15
invariant_fail_on_revert = false
invariant_call_override = false

# Performance
ffi = true
fs_permissions = [
    { access = "read-write", path = "./test/fixtures" },
    { access = "read", path = "./out" },
    { access = "read", path = "./cache" },
]

# RPC configuration for multi-chain testing
[rpc_endpoints]
mainnet = "https://eth-mainnet.g.alchemy.com/v2/demo"
polygon = "https://polygon-mainnet.g.alchemy.com/v2/demo"
arbitrum = "https://arb-mainnet.g.alchemy.com/v2/demo"
optimism = "https://opt-mainnet.g.alchemy.com/v2/demo"
bsc = "https://bsc-dataseed.binance.org"

# Profile for CI testing
[profile.ci]
fuzz_runs = 1000
verbosity = 2
gas_reports = []

# Profile for stress testing  
[profile.stress]
fuzz_runs = 50000
invariant_runs = 1000
invariant_depth = 25
verbosity = 1

# Profile for coverage
[profile.coverage]
optimizer = false
fuzz_runs = 100